"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os,sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'p_=b3z#76r_vzfucbh-=3=h=ke9dmo216g+!vhrwwmzkz-$u#x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

# 注册app
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 网站地图应用
    'django.contrib.sitemaps',
    'django.contrib.humanize',  # 添加人性化过滤器
    'storm', #添加用户博客应用
    'user', # 用户
    'comment',  # 评论
    'haystack',
    'DjangoUeditor',
    # 'imagekit',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 添加此行，注册 Django templates模板
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'storm.context_processors.settings_info',  # 自定义上下文管理器
            ],
            # 'libraries':{
            #             'blog_tags':  'storm.templatetags.blog_tags',
 
            # }
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'

# 添加 apps 目录
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
            'HOST': '47.106.82.186',
            'PORT': '3306',
            'USER': 'root',
            'PASSWORD': 'Ljh!@#$824144294',
            'NAME': 'sblog',
            # 避免映射数据库时出现警告
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                'charset': 'utf8mb4',
            },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'  英文
LANGUAGE_CODE = 'zh-hans'

# TIME_ZONE = 'UTC' 时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# USE_TZ是统一全球的时间，不夸时区的应用可以把这个设置为False
USE_TZ = False

# 全文搜索应用配置
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',  # 选择语言解析器为自己更换的结巴分词
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),  # 保存索引文件的地址，选择主目录下，这个会自动生成
    }
}
# 统一分页设置
BASE_PAGE_BY = 10
BASE_ORPHANS = 5
# 自动更新索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
# 媒体文件收集
MEDIA_URL = "/media/"   # 媒体文件别名(相对路径) 和 绝对路径
MEDIA_ROOT = (
    os.path.join(BASE_DIR, 'media')
)


# 静态文件 static
STATIC_URL = '/static/'
#用来存储使用python manage.py collectstatic命令收集起来的静态文件
STATIC_ROOT = os.path.join(BASE_DIR, '/static/')
# 静态文件路径,不能与STATIC_ROOT相同
STATICFILES_DIRS = [
    # 注释是为了解决debug设置为false时不能加载静态资源
    os.path.join(BASE_DIR, 'static')
]

# 网站描述，用于SEO
SITE_DESCRIPTION = "Afanti的个人网站，记录生活的瞬间，分享学习的心得，感悟生活，留住感动，静静寻觅生活的美好"

# 网站关键词，用于SEO
SITE_KEYWORDS = "Afanti,阿凡提,网络,IT,技术,博客,Python"

# 自定义用户model
AUTH_USER_MODEL = 'user.Ouser'